name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 2.2.47)'
        required: true
        default: '2.2.47'
      release_type:
        description: 'Release type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - prerelease

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Update package version
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npm run app:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run app:build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            releases/${{ github.event.inputs.version }}/*.exe
            releases/${{ github.event.inputs.version }}/*.nsis.7z

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            releases/${{ github.event.inputs.version }}/*.AppImage
            releases/${{ github.event.inputs.version }}/*.deb
            releases/${{ github.event.inputs.version }}/*.rpm

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          find . -type f -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          prerelease: ${{ github.event.inputs.release_type == 'prerelease' }}
          files: |
            windows-build/*
            linux-build/*
          body: |
            ## Changes in v${{ github.event.inputs.version }}

            ### Downloads
            - **Windows**: `.exe` installer
            - **Linux**:
              - `.AppImage` - Portable application
              - `.deb` - For Ubuntu/Debian systems
              - `.rpm` - For Red Hat/Fedora/CentOS systems
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
